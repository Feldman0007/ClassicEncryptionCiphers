– Group Members (solo): Alexander Feldman - feldman0007@csu.fullerton.edu
– Programming Language: C++
– Execution Instructions:
  1. Open terminal and navigate to project folder. Type 'make' into terminal to compile.
  2. Run the executable to test program on different ciphers using the following command format (case insensitive for all):
    2a ./cipher <CIPHER NAME> <KEY> <ENC/DEC> <INPUTFILE> <OUTPUT FILE>
               <CIPHER NAME> can be: "PLF": Playfair; "RTS": Row Transposition; "RFC": Railfence; "VIG": Vigenre; "CES": Caesar;
               <KEY> will vary depending on the cipher. There is key validation in place. Railfence will not work if key is larger 10. Max key can be increased
                      by increasing MAX_RAILS in Railfence.h
               <ENC/DEC> will be "ENC" for encryption and "DEC" for decyption
               <INPUTFILE> && <OUTPUT FILE> format: "____.txt"
– I did not do the extra credit, although if I had enough time i would have because they looked fun! :(
- IMPORTANT NOTES: 
    If input is very large (over 10,000 characters), my implementation may not work. Can be fixed in cipher interface by increasing MAX_MATRIX_COLS to a large number
    Also, if decryption is ran before encryption, my program will crash because I do not strip case in decryption. That is handled in encryption.
